满二叉树
    对于整颗树来说，所有的节点除了叶子节点，左右孩子都不为空
    对于满二叉树来说，这颗树有多少层，相应的节点数是固定的


完全二叉树
    不一定是满二叉树，但是它缺失节点的那一部分一定是在整棵树的右下侧
    如果老的一层容纳不下了新的节点时，那就在新的一层中依旧是从左到右的顺序来盛放新的节点
    最下面一层一定都是叶子节点，其次叶子节点的上面一层可能还有叶子节点，但这些叶子节点一定是在这颗树的右侧

    把元素按照一层一层的顺序排成树的形状


二叉堆(Binary Heap)
    二叉堆是一颗完全二叉树

    堆中某个节点的值总是不大于其父节点的值，即所有节点的值都大于等于孩子节点的值-->最大堆
    堆中某个节点的值总是不小于其父节点的值，即所有节点的值都小于等于孩子节点的值-->最小堆

    如果用数组来存储二叉堆，对于某个节点来说
        数组从索引为1开始存放节点，父子节点的索引关系如下
            parent(i) = i / 2
            left child(i) = 2 * i
            right child(i) = 2 * i + 1

        数组从索引为0开始存放节点，父子节点的索引关系如下
            parent(i) = (i-1) / 2
            left child(i) = 2 * i + 1
            right child(i) = 2 * i + 2