/*
    双向链表
        双向链表(double linked list)是在单链表的每个结点中，再设置一个指向其前驱结点的指针域
        所以在双向链表中的结点都有两个指针域，一个指向直接后继，另一个指向直接前驱
*/

/*
    在双向链表中，对于其中某一个结点p，它的后继的前驱以及其前驱的后继都是它自己
    p->next->prior = p = p->prior->next
*/

/*
     插入操作，注意顺序，不能反
     假设存储元素e的结点为s，要实现将结点s插入到结点p和p->nex之间

     s->prior = p;  //把p赋值给s的前驱
     s->next = p->next; //把p->next赋值给s的后继
     p->next->prior = s;    //把s赋值给p->next的前驱
     p->next = s;   //把s赋值给p的后继

    顺序: 先搞定s的前驱和后继，再搞定后结点的前驱，最后解决前结点的后继
*/

/*
    删除操作
    假设要删除结点p

    p->prior->next = p->next;   //把p->next赋值给p->prior的后继
    p->next->prior = p->prior;  //把p->prior赋值给p->next的前驱
    free(p);    //释放节点
*/